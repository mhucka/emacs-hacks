# -*- mode: snippet; tab-width: 4 -*-
# expand-env: ((yas-indent-line 'fixed))
# key: smart-rule
# --
# ~~~~ Helper functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Log a message in DEVONthink's log and include the path to this script.
on report(error_text)
	local script_path
	tell application "System Events"
		set script_path to POSIX path of (path to me as alias)
	end tell
	tell application id "DNtp"
		log message script_path info error_text   # DEVONthink's log.
	end tell
	log error_text				                  # Debugger & osascript log.
end report

# ~~~~ Main body ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

on act_on_record(rec)
	tell application id "DNtp"
		$0
	end tell
end act_on_record

# ~~~~ Interfaces to DEVONthink ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Allow execution as part of a Smart Rule.
on performSmartRule(selected_records)
	tell application id "DNtp"
		try
			repeat with rec in (selected records)
				my act_on_record(rec)
			end repeat
		on error msg number err
			if the err is not -128 then     # (Code -128 means user cancelled.)
				my report(msg & " (error " & err & ")")
				display alert "DEVONthink" message msg as warning
			end if
		end try
	end tell
end performSmartRule

# Allow execution outside of a Smart Rule (e.g., in a debugger).
on run
	tell application id "DNtp"
		my performSmartRule(selection as list)
	end tell
end run
